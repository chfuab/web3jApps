package com.example.web3japps;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.1.
 */
@SuppressWarnings("rawtypes")
public class ServiceContract extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_BALANCEOFACCOUNT = "balanceOfAccount";

    public static final String FUNC_CHECKIFACCESSINSERVICE = "checkIfAccessInService";

    public static final String FUNC_CREATESERVICE = "createService";

    public static final String FUNC_GETADDRESSFROMID = "getAddressFromId";

    public static final String FUNC_GETRATING = "getRating";

    public static final String FUNC_GETRECOMMENDATION = "getRecommendation";

    public static final String FUNC_GETSERVICE = "getService";

    public static final String FUNC_INVEST = "invest";

    public static final String FUNC_PAYSERVICE = "payService";

    public static final String FUNC_RATESERVICE = "rateService";

    public static final String FUNC_SETADDRESSFROMID = "setAddressFromId";

    public static final String FUNC_SETCID = "setCid";

    public static final String FUNC_SETRECOMMENDATION = "setRecommendation";

    @Deprecated
    protected ServiceContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ServiceContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected ServiceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected ServiceContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<BigInteger> balanceOf() {
        final Function function = new Function(FUNC_BALANCEOF, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> balanceOfAccount() {
        final Function function = new Function(FUNC_BALANCEOFACCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> checkIfAccessInService(String serviceId) {
        final Function function = new Function(FUNC_CHECKIFACCESSINSERVICE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> createService(String serviceId, BigInteger price, String password) {
        final Function function = new Function(
                FUNC_CREATESERVICE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId), 
                new org.web3j.abi.datatypes.generated.Uint256(price), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> getAddressFromId(String serviceId) {
        final Function function = new Function(FUNC_GETADDRESSFROMID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getRating(String serviceId) {
        final Function function = new Function(FUNC_GETRATING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<List> getRecommendation(String serviceId) {
        final Function function = new Function(FUNC_GETRECOMMENDATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<String> getService(String serviceId) {
        final Function function = new Function(FUNC_GETSERVICE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> invest(BigInteger weiValue) {
        final Function function = new Function(
                FUNC_INVEST, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> payService(String serviceId) {
        final Function function = new Function(
                FUNC_PAYSERVICE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> rateService(String serviceId, BigInteger rating) {
        final Function function = new Function(
                FUNC_RATESERVICE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId), 
                new org.web3j.abi.datatypes.generated.Uint256(rating)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setAddressFromId(String serviceId, String addr) {
        final Function function = new Function(
                FUNC_SETADDRESSFROMID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId), 
                new org.web3j.abi.datatypes.Address(160, addr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCid(String serviceId, String cid) {
        final Function function = new Function(
                FUNC_SETCID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId), 
                new org.web3j.abi.datatypes.Utf8String(cid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setRecommendation(String serviceId) {
        final Function function = new Function(
                FUNC_SETRECOMMENDATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(serviceId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static ServiceContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ServiceContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static ServiceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ServiceContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static ServiceContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new ServiceContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ServiceContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new ServiceContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<ServiceContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ServiceContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ServiceContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ServiceContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<ServiceContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ServiceContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ServiceContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ServiceContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
